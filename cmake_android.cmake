# Generated by gn_to_cmake.py.
cmake_minimum_required(VERSION 2.8.8 FATAL_ERROR)
cmake_policy(VERSION 2.8.8)
enable_language(ASM)

add_definitions(-DSDL_VIDEO_DRIVER_COCOA=1)

include(cmake_gpu_tool_utils.cmake)
include(cmake_raw.cmake)
include(cmake_sse42.cmake)
include(cmake_sse41.cmake)
include(cmake_modules__sksg_tests.cmake)
include(cmake_sktexttopdf.cmake)
include(cmake_skcms.cmake)
include(cmake_lua_app.cmake)
include(cmake_gm.cmake)
include(cmake_list_gms.cmake)


##//:run_sksllex
#set("target" "run_sksllex")
#set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
#add_custom_target("${target}" SOURCES ${${target}__cxx_srcs})

include(cmake_modules__skottie.cmake)
include(cmake_avx.cmake)
include(cmake_nanobench.cmake)


#//third_party/expat:expat
set("target" "third_party__expat")
list(APPEND "${target}__c_srcs"
        "/mywork/github/skia/third_party/externals/expat/lib/xmlparse.c"
        "/mywork/github/skia/third_party/externals/expat/lib/xmlrole.c"
        "/mywork/github/skia/third_party/externals/expat/lib/xmltok.c")
add_library("${target}" OBJECT ${${target}__c_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "HAVE_MEMMOVE;XML_STATIC;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/expat/lib ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//third_party/spirv-tools:spirv_glsl_tables
set("target" "third_party__spirv-tools_spirv_glsl_tables")
list(APPEND "${target}__other_srcs"
        "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.0/extinst.glsl.std.450.grammar.json"
        "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.0/spirv.core.grammar.json")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/glsl.std.450.insts-1.0.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--spirv-core-grammar=../third_party/externals/spirv-headers/include/spirv/1.0/spirv.core.grammar.json"
        "--extinst-glsl-grammar=../third_party/externals/spirv-headers/include/spirv/1.0/extinst.glsl.std.450.grammar.json"
        "--glsl-insts-output=spirv-tools/glsl.std.450.insts-1.0.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//:hsw
set("target" "hsw")
set("${target}__cxx_srcs" "/mywork/github/skia/src/opts/SkOpts_hsw.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-march=haswell -ffp-contract=fast -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:webp
set("target" "webp")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/src/codec/SkWebpAdapterCodec.cpp"
        "/mywork/github/skia/src/codec/SkWebpCodec.cpp"
        "/mywork/github/skia/src/images/SkWebpEncoder.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;SK_HAS_WEBP_LIBRARY;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/libwebp/src -isystem /mywork/github/skia/third_party/externals/libwebp -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")

include(cmake_third_party__lua.cmake)


#//third_party/zlib:zlib_x86
set("target" "third_party__zlib_zlib_x86")
list(APPEND "${target}__c_srcs"
        "/mywork/github/skia/third_party/externals/zlib/crc_folding.c"
        "/mywork/github/skia/third_party/externals/zlib/fill_window_sse.c"
        "/mywork/github/skia/third_party/externals/zlib/x86.c")
add_library("${target}" OBJECT ${${target}__c_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -msse4.2 -mpclmul ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")

include(cmake_bookmaker.cmake)


#//:typeface_freetype
set("target" "typeface_freetype")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")

include(cmake_pdf.cmake)

#//:skqp_lib
set("target" "skqp_lib")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/dm/DMGpuTestProcs.cpp"
        "/mywork/github/skia/tools/skqp/gm_knowledge.cpp"
        "/mywork/github/skia/tools/skqp/gm_runner.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SKQP_GLOBAL_ERROR_TOLERANCE=0;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")

include(cmake_pathops_unittest.cmake)


#//:xml
set("target" "xml")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/src/svg/SkSVGCanvas.cpp"
        "/mywork/github/skia/src/svg/SkSVGDevice.cpp"
        "/mywork/github/skia/src/xml/SkDOM.cpp"
        "/mywork/github/skia/src/xml/SkXMLParser.cpp"
        "/mywork/github/skia/src/xml/SkXMLWriter.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;SK_XML;XML_STATIC;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/expat/lib -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")

include(cmake_bench.cmake)
include(cmake_third_party__libjpeg.cmake)


#//:skpbench
set("target" "skpbench")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/skpbench/skpbench.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__zlib>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:experimental_svg_model>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})

set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//third_party/googletest:googletest
set("target" "third_party__googletest")
set("${target}__cxx_srcs" "/mywork/github/skia/third_party/externals/googletest/googletest/src/gtest-all.cc")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_property(TARGET "${target}" APPEND PROPERTY INCLUDE_DIRECTORIES
        "/mywork/github/skia/third_party/externals/googletest/googletest/")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/googletest/googletest/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:dump_record
set("target" "dump_record")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/tools/DumpRecord.cpp"
        "/mywork/github/skia/tools/dump_record.cpp")
set("${target}__obj_target_srcs" "$<TARGET_OBJECTS:flags>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})

set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")

include(cmake_third_party__icu.cmake)


#//:armv7
set("target" "armv7")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:public
set("target" "public")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:lua
set("target" "lua")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/src/utils/SkLua.cpp"
        "/mywork/github/skia/src/utils/SkLuaCanvas.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/lua -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")


#//third_party/Nima-Cpp:copy-nima-cpp
set("target" "third_party__Nima-Cpp_copy-nima-cpp")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/Nima-Cpp/Source")
set("${target}__output" "/mywork/github/skia/cmake/gen/third_party/Nima-Cpp/Nima-Cpp/nima")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E copy "/mywork/github/skia/third_party/externals/Nima-Cpp/Source" "/mywork/github/skia/cmake/gen/third_party/Nima-Cpp/Nima-Cpp/nima"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Copy ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//:get_images_from_skps
set("target" "get_images_from_skps")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/get_images_from_skps.cpp")
set("${target}__obj_target_srcs" "$<TARGET_OBJECTS:flags>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//:create_flutter_test_images
set("target" "create_flutter_test_images")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/create_flutter_test_images.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__zlib>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:experimental_svg_model>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//third_party/Nima-Cpp:copy-nima-math-cpp
set("target" "third_party__Nima-Cpp_copy-nima-math-cpp")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/Nima-Math-Cpp/Source")
set("${target}__output" "/mywork/github/skia/cmake/gen/third_party/Nima-Cpp/Nima-Math-Cpp/nima")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E copy "/mywork/github/skia/third_party/externals/Nima-Math-Cpp/Source" "/mywork/github/skia/cmake/gen/third_party/Nima-Cpp/Nima-Math-Cpp/nima"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Copy ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})

include(cmake_third_party__libsdl.cmake)

#//third_party/libwebp:libwebp_avx2
set("target" "third_party__libwebp_libwebp_avx2")
set("${target}__c_srcs" "/mywork/github/skia/third_party/externals/libwebp/src/dsp/enc_avx2.c")
add_library("${target}" OBJECT ${${target}__c_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "WEBP_SWAP_16BIT_CSP;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/libwebp/src -isystem /mywork/github/skia/third_party/externals/libwebp -mavx2 ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")

include(cmake_gpu.cmake)


#//third_party/spirv-headers:spirv-headers
set("target" "third_party__spirv-headers")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/spirv-headers/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:fiddle
set("target" "fiddle")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/tools/fiddle/draw.cpp"
        "/mywork/github/skia/tools/fiddle/fiddle_main.cpp"
        "/mywork/github/skia/tools/fiddle/null_context.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:modules__skottie>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:modules__sksg>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_SUPPORT_ATLAS_TEXT=1;SK_ENABLE_SKOTTIE;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
add_dependencies("${target}"
        "skia.h")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//modules/skottie:tool
set("target" "modules__skottie_tool")
set("${target}__cxx_srcs" "/mywork/github/skia/modules/skottie/src/SkottieTool.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_ENABLE_SKOTTIE;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")

include(cmake_tool_utils.cmake)


#//third_party/spirv-tools:spirv_vendor_tables_amd_shader_gcn_shader
set("target" "third_party__spirv-tools_spirv_vendor_tables_amd_shader_gcn_shader")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-tools/source/extinst.spv-amd-gcn-shader.grammar.json")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/spv-amd-gcn-shader.insts.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--extinst-vendor-grammar=../third_party/externals/spirv-tools/source/extinst.spv-amd-gcn-shader.grammar.json"
        "--vendor-insts-output=spirv-tools/spv-amd-gcn-shader.insts.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//:SkiaSDLExample
set("target" "SkiaSDLExample")
set("${target}__cxx_srcs" "/mywork/github/skia/example/SkiaSDLExample.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__libsdl>"
        "$<TARGET_OBJECTS:gpu_tool_utils>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "HAVE_ACOS;HAVE_ASIN;HAVE_ATAN;HAVE_ATAN2;HAVE_CEIL;HAVE_COPYSIGN;HAVE_COS;HAVE_COSF;HAVE_FABS;HAVE_FLOOR;HAVE_LOG;HAVE_POW;HAVE_SCALBN;HAVE_SIN;HAVE_SINF;HAVE_SQRT;HAVE_SQRTF;HAVE_TAN;HAVE_TANF;SDL_HAPTIC_DISABLED=1;SDL_JOYSTICK_DISABLED=1;SDL_LOADSO_DLOPEN=1;SDL_THREAD_PTHREAD=1;SDL_THREAD_PTHREAD_RECURSIVE_MUTEX=1;SDL_TIMER_UNIX=1;SDL_FILESYSTEM_COCOA=1;SDL_VIDEO_DRIVER_COCOA=1;SDL_VIDEO_OPENGL=1;SDL_VIDEO_RENDER_OGL=1;SDL_VIDEO_OPENGL_CGL=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/sdl/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
find_library("library__Carbon" "Carbon")
find_library("library__Cocoa" "Cocoa")
find_library("library__Foundation" "Foundation")
find_library("library__IOKit" "IOKit")
find_library("library__QuartzCore" "QuartzCore")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}"
        "${library__Carbon}"
        "${library__Cocoa}"
        "${library__Foundation}"
        "${library__IOKit}"
        "${library__QuartzCore}")


#//:flags
set("target" "flags")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/flags/SkCommandLineFlags.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")

include(cmake_third_party__Nima.cmake)


#//:png
set("target" "png")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/src/codec/SkIcoCodec.cpp"
        "/mywork/github/skia/src/codec/SkPngCodec.cpp"
        "/mywork/github/skia/src/images/SkPngEncoder.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;SK_HAS_PNG_LIBRARY;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/libpng -isystem /mywork/github/skia/third_party/externals/libpng -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:ssse3
set("target" "ssse3")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/src/opts/SkBitmapProcState_opts_SSSE3.cpp"
        "/mywork/github/skia/src/opts/SkOpts_ssse3.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-mssse3 -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:skdiff
set("target" "skdiff")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/tools/skdiff/skdiff.cpp"
        "/mywork/github/skia/tools/skdiff/skdiff_html.cpp"
        "/mywork/github/skia/tools/skdiff/skdiff_main.cpp"
        "/mywork/github/skia/tools/skdiff/skdiff_utils.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__zlib>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:experimental_svg_model>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})

set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//:skqp
set("target" "skqp")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/skqp/skqp.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:modules__skottie>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__zlib>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:modules__sksg>"
        "$<TARGET_OBJECTS:modules__sksg_tests>"
        "$<TARGET_OBJECTS:gm>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:modules__skottie_tests>"
        "$<TARGET_OBJECTS:third_party__googletest>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:skqp_lib>"
        "$<TARGET_OBJECTS:tests>"
        "$<TARGET_OBJECTS:experimental_svg_model>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -isystem /mywork/github/skia/third_party/externals/googletest/googletest/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//third_party/spirv-tools:spirv_vendor_tables_amd_shader_trinary_minmax
set("target" "third_party__spirv-tools_spirv_vendor_tables_amd_shader_trinary_minmax")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-tools/source/extinst.spv-amd-shader-trinary-minmax.grammar.json")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/spv-amd-shader-trinary-minmax.insts.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--extinst-vendor-grammar=../third_party/externals/spirv-tools/source/extinst.spv-amd-shader-trinary-minmax.grammar.json"
        "--vendor-insts-output=spirv-tools/spv-amd-shader-trinary-minmax.insts.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//:crc32
set("target" "crc32")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//third_party/spirv-tools:spirv_generators
set("target" "third_party__spirv-tools_spirv_generators")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/spir-v.xml")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/generators.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_registry_tables.py"
        "--xml=../third_party/externals/spirv-headers/include/spirv/spir-v.xml"
        "--generator-output=spirv-tools/generators.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//third_party/imgui:imgui
set("target" "third_party__imgui")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/third_party/externals/imgui/imgui.cpp"
        "/mywork/github/skia/third_party/externals/imgui/imgui_demo.cpp"
        "/mywork/github/skia/third_party/externals/imgui/imgui_draw.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/imgui -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")

include(cmake_skia.cmake)
include(cmake_fuzz.cmake)

#//:jpeg
set("target" "jpeg")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/src/codec/SkJpegCodec.cpp"
        "/mywork/github/skia/src/codec/SkJpegDecoderMgr.cpp"
        "/mywork/github/skia/src/codec/SkJpegUtility.cpp"
        "/mywork/github/skia/src/images/SkJPEGWriteUtility.cpp"
        "/mywork/github/skia/src/images/SkJpegEncoder.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;SK_HAS_JPEG_LIBRARY;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/libjpeg-turbo -isystem /mywork/github/skia/third_party/externals/libjpeg-turbo -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:list_gpu_unit_tests
set("target" "list_gpu_unit_tests")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/dm/DMGpuTestProcs.cpp"
        "/mywork/github/skia/tools/list_gpu_unit_tests.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:modules__skottie>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__zlib>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:modules__sksg>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:modules__skottie_tests>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:experimental_svg_model>"
        "$<TARGET_OBJECTS:tests>"
        "$<TARGET_OBJECTS:modules__sksg_tests>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//third_party/libwebp:libwebp_sse41
set("target" "third_party__libwebp_libwebp_sse41")
list(APPEND "${target}__c_srcs"
        "/mywork/github/skia/third_party/externals/libwebp/src/dsp/alpha_processing_sse41.c"
        "/mywork/github/skia/third_party/externals/libwebp/src/dsp/dec_sse41.c"
        "/mywork/github/skia/third_party/externals/libwebp/src/dsp/enc_sse41.c"
        "/mywork/github/skia/third_party/externals/libwebp/src/dsp/lossless_enc_sse41.c")
add_library("${target}" OBJECT ${${target}__c_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "WEBP_SWAP_16BIT_CSP;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/libwebp/src -isystem /mywork/github/skia/third_party/externals/libwebp -msse4.1 ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:create_test_font_color
set("target" "create_test_font_color")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/fonts/create_test_font_color.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__zlib>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:experimental_svg_model>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//modules/skottie:fuzz
set("target" "modules__skottie_fuzz")
set("${target}__cxx_srcs" "/mywork/github/skia/modules/skottie/fuzz/FuzzSkottieJSON.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_ENABLE_SKOTTIE;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")


#//third_party/piex:piex
set("target" "third_party__piex")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/third_party/externals/piex/src/binary_parse/cached_paged_byte_array.cc"
        "/mywork/github/skia/third_party/externals/piex/src/binary_parse/range_checked_byte_ptr.cc"
        "/mywork/github/skia/third_party/externals/piex/src/image_type_recognition/image_type_recognition_lite.cc"
        "/mywork/github/skia/third_party/externals/piex/src/piex.cc"
        "/mywork/github/skia/third_party/externals/piex/src/tiff_directory/tiff_directory.cc"
        "/mywork/github/skia/third_party/externals/piex/src/tiff_parser.cc")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "BREAK_IF_DEBUGGING_AND_OUT_OF_RANGE;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/piex -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")

include(cmake_experimental_svg_model.cmake)
include(cmake_tests.cmake)

#//modules/sksg:samples
set("target" "modules__sksg_samples")
set("${target}__cxx_srcs" "/mywork/github/skia/modules/sksg/samples/SampleSVGPong.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_HAS_SKSG;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")

include(cmake_third_party__libpng.cmake)

#//:remote_demo
set("target" "remote_demo")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/remote_demo.cpp")
add_executable("${target}" ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//:fontmgr_fuchsia
set("target" "fontmgr_fuchsia")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})

set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:sse2
set("target" "sse2")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/src/opts/SkBitmapProcState_opts_SSE2.cpp"
        "/mywork/github/skia/src/opts/SkBlitRow_opts_SSE2.cpp"
        "/mywork/github/skia/src/opts/opts_check_x86.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-msse2 -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")

include(cmake_sk_app.cmake)
include(cmake_third_party__spirv.cmake)


#//third_party/spirv-tools:spirv_extension_enum
set("target" "third_party__spirv-tools_spirv_extension_enum")
list(APPEND "${target}__other_srcs"
        "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.0/extinst.glsl.std.450.grammar.json"
        "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.0/spirv.core.grammar.json")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/extension_enum.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--spirv-core-grammar=../third_party/externals/spirv-headers/include/spirv/1.0/spirv.core.grammar.json"
        "--extension-enum-output=spirv-tools/extension_enum.inc"
        "--enum-string-mapping-output=spirv-tools/enum_string_mapping.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//:arm64
set("target" "arm64")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//third_party/zlib:zlib
set("target" "third_party__zlib")
list(APPEND "${target}__c_srcs"
        "/mywork/github/skia/third_party/externals/zlib/adler32.c"
        "/mywork/github/skia/third_party/externals/zlib/compress.c"
        "/mywork/github/skia/third_party/externals/zlib/crc32.c"
        "/mywork/github/skia/third_party/externals/zlib/deflate.c"
        "/mywork/github/skia/third_party/externals/zlib/gzclose.c"
        "/mywork/github/skia/third_party/externals/zlib/gzlib.c"
        "/mywork/github/skia/third_party/externals/zlib/gzread.c"
        "/mywork/github/skia/third_party/externals/zlib/gzwrite.c"
        "/mywork/github/skia/third_party/externals/zlib/infback.c"
        "/mywork/github/skia/third_party/externals/zlib/inffast.c"
        "/mywork/github/skia/third_party/externals/zlib/inflate.c"
        "/mywork/github/skia/third_party/externals/zlib/inftrees.c"
        "/mywork/github/skia/third_party/externals/zlib/trees.c"
        "/mywork/github/skia/third_party/externals/zlib/uncompr.c"
        "/mywork/github/skia/third_party/externals/zlib/zutil.c")
add_library("${target}" OBJECT ${${target}__c_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/zlib ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//third_party/spirv-tools:spirv_vendor_tables_amd_shader_explicit_vertex_parameter
set("target" "third_party__spirv-tools_spirv_vendor_tables_amd_shader_explicit_vertex_parameter")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-tools/source/extinst.spv-amd-shader-explicit-vertex-parameter.grammar.json")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/spv-amd-shader-explicit-vertex-parameter.insts.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--extinst-vendor-grammar=../third_party/externals/spirv-tools/source/extinst.spv-amd-shader-explicit-vertex-parameter.grammar.json"
        "--vendor-insts-output=spirv-tools/spv-amd-shader-explicit-vertex-parameter.insts.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//third_party/spirv-tools:spirv_opencl_tables
set("target" "third_party__spirv-tools_spirv_opencl_tables")
list(APPEND "${target}__other_srcs"
        "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.0/extinst.opencl.std.100.grammar.json"
        "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.0/spirv.core.grammar.json")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/opencl.std.insts-1.0.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--spirv-core-grammar=../third_party/externals/spirv-headers/include/spirv/1.0/spirv.core.grammar.json"
        "--extinst-opencl-grammar=../third_party/externals/spirv-headers/include/spirv/1.0/extinst.glsl.std.450.grammar.json"
        "--opencl-insts-output=spirv-tools/opencl.std.insts-1.0.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})

include(cmake_third_party__harfbuzz.cmake)

#//:heif
set("target" "heif")
set("${target}__cxx_srcs" "/mywork/github/skia/src/codec/SkHeifCodec.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;SK_HAS_HEIF_LIBRARY;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//third_party/spirv-tools:spirv_vendor_tables_amd_shader_ballot
set("target" "third_party__spirv-tools_spirv_vendor_tables_amd_shader_ballot")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-tools/source/extinst.spv-amd-shader-ballot.grammar.json")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/spv-amd-shader-ballot.insts.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--extinst-vendor-grammar=../third_party/externals/spirv-tools/source/extinst.spv-amd-shader-ballot.grammar.json"
        "--vendor-insts-output=spirv-tools/spv-amd-shader-ballot.insts.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})

include(cmake_effects.cmake)

#//:views
set("target" "views")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/src/views/SkEvent.cpp"
        "/mywork/github/skia/src/views/SkEventSink.cpp"
        "/mywork/github/skia/src/views/SkTouchGesture.cpp"
        "/mywork/github/skia/src/views/SkView.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")


#//modules/skshaper:skshaper
set("target" "modules__skshaper")
set("${target}__cxx_srcs" "/mywork/github/skia/modules/skshaper/src/SkShaper_harfbuzz.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;U_USING_ICU_NAMESPACE=0;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/harfbuzz -isystem /mywork/github/skia/third_party/externals/harfbuzz/src -isystem /mywork/github/skia/third_party/externals/icu/source/common -isystem /mywork/github/skia/third_party/icu -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")


#//:fontmgr_custom
set("target" "fontmgr_custom")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:common_flags
set("target" "common_flags")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/tools/flags/SkCommonFlags.cpp"
        "/mywork/github/skia/tools/flags/SkCommonFlagsConfig.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")

include(cmake_third_party__libwebp.cmake)
include(cmake_viewer.cmake)
include(cmake_skiaserve.cmake)


#//:fontmgr_empty
set("target" "fontmgr_empty")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:fontmgr_fontconfig
set("target" "fontmgr_fontconfig")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:compile_processors
set("target" "compile_processors")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_custom_target("${target}" SOURCES ${${target}__cxx_srcs})


#//:skpinfo
set("target" "skpinfo")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/skpinfo.cpp")
set("${target}__obj_target_srcs" "$<TARGET_OBJECTS:flags>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//:lua_pictures
set("target" "lua_pictures")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/lua/lua_pictures.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__lua>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:third_party__harfbuzz>"
        "$<TARGET_OBJECTS:third_party__icu>"
        "$<TARGET_OBJECTS:lua>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:modules__skshaper>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:experimental_svg_model>"
        "$<TARGET_OBJECTS:third_party__zlib>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -isystem /mywork/github/skia/third_party/externals/lua -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


#//:public_headers_warnings_check
set("target" "public_headers_warnings_check")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/public_headers_warnings_check.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;SK_ENABLE_SKOTTIE;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia.h"
        "skia")


#//:fontmgr_android
set("target" "fontmgr_android")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_SUPPORT_ATLAS_TEXT=1;SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SKIA_IMPLEMENTATION=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//modules/skottie:tests
set("target" "modules__skottie_tests")
set("${target}__cxx_srcs" "/mywork/github/skia/modules/skottie/src/SkottieTest.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_ENABLE_SKOTTIE;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")
add_dependencies("${target}"
        "skia")


#//:create_test_font
set("target" "create_test_font")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/fonts/create_test_font.cpp")
add_executable("${target}" ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")

include(cmake_third_party__sfntly.cmake)

#//:none
set("target" "none")
set("${target}__cxx_srcs" "/mywork/github/skia/cmake/empty.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:skp_parser
set("target" "skp_parser")
set("${target}__cxx_srcs" "/mywork/github/skia/tools/skp_parser.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__zlib>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:experimental_svg_model>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")


include(cmake_samples.cmake)


#//third_party/spirv-tools:spirv_core_tables_1.2
set("target" "third_party__spirv-tools_spirv_core_tables_1.2")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.2/spirv.core.grammar.json")
list(APPEND "${target}__output"
        "/mywork/github/skia/cmake/spirv-tools/core.insts-1.2.inc"
        "/mywork/github/skia/cmake/spirv-tools/operand.kinds-1.2.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--spirv-core-grammar=../third_party/externals/spirv-headers/include/spirv/1.2/spirv.core.grammar.json"
        "--core-insts-output=spirv-tools/core.insts-1.2.inc"
        "--operand-kinds-output=spirv-tools/operand.kinds-1.2.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})

include(cmake_modules__sksg.cmake)


#//third_party/spirv-tools:spirv_core_tables_1.0
set("target" "third_party__spirv-tools_spirv_core_tables_1.0")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.0/spirv.core.grammar.json")
list(APPEND "${target}__output"
        "/mywork/github/skia/cmake/spirv-tools/core.insts-1.0.inc"
        "/mywork/github/skia/cmake/spirv-tools/operand.kinds-1.0.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--spirv-core-grammar=../third_party/externals/spirv-headers/include/spirv/1.0/spirv.core.grammar.json"
        "--core-insts-output=spirv-tools/core.insts-1.0.inc"
        "--operand-kinds-output=spirv-tools/operand.kinds-1.0.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//third_party/spirv-tools:spirv_core_tables_1.1
set("target" "third_party__spirv-tools_spirv_core_tables_1.1")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-headers/include/spirv/1.1/spirv.core.grammar.json")
list(APPEND "${target}__output"
        "/mywork/github/skia/cmake/spirv-tools/core.insts-1.1.inc"
        "/mywork/github/skia/cmake/spirv-tools/operand.kinds-1.1.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/generate_grammar_tables.py"
        "--spirv-core-grammar=../third_party/externals/spirv-headers/include/spirv/1.1/spirv.core.grammar.json"
        "--core-insts-output=spirv-tools/core.insts-1.1.inc"
        "--operand-kinds-output=spirv-tools/operand.kinds-1.1.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//third_party/spirv-tools:spirv_build_version
set("target" "third_party__spirv-tools_spirv_build_version")
set("${target}__other_srcs" "/mywork/github/skia/third_party/externals/spirv-tools/CHANGES")
set("${target}__output" "/mywork/github/skia/cmake/spirv-tools/build-version.inc")
add_custom_command(OUTPUT ${${target}__output}
        COMMAND ${CMAKE_COMMAND} -E make_directory "/mywork/github/skia/cmake/spirv-tools"
        COMMAND python "/mywork/github/skia/third_party/externals/spirv-tools/utils/update_build_version.py"
        "../third_party/externals/spirv-tools"
        "spirv-tools/build-version.inc"
        DEPENDS  ${${target}__other_srcs}
        WORKING_DIRECTORY "/mywork/github/skia/cmake/"
        COMMENT "Action: ${target}"
        VERBATIM)
add_custom_target("${target}" SOURCES ${${target}__other_srcs} DEPENDS ${${target}__output})


#//third_party/jsoncpp:jsoncpp
set("target" "third_party__jsoncpp")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/third_party/externals/jsoncpp/src/lib_json/json_reader.cpp"
        "/mywork/github/skia/third_party/externals/jsoncpp/src/lib_json/json_value.cpp"
        "/mywork/github/skia/third_party/externals/jsoncpp/src/lib_json/json_writer.cpp")
add_library("${target}" OBJECT ${${target}__cxx_srcs})
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "JSON_USE_EXCEPTION=0;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//third_party/libmicrohttpd:libmicrohttpd
set("target" "third_party__libmicrohttpd")
list(APPEND "${target}__c_srcs"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/base64.c"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/connection.c"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/daemon.c"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/internal.c"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/memorypool.c"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/postprocessor.c"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/reason_phrase.c"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/response.c"
        "/mywork/github/skia/third_party/externals/microhttpd/src/microhttpd/tsearch.c")
add_library("${target}" OBJECT ${${target}__c_srcs})
set_property(TARGET "${target}" APPEND PROPERTY INCLUDE_DIRECTORIES
        "/mywork/github/skia/third_party/libmicrohttpd/")
set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "DAUTH_SUPPORT=1;HAVE_NETINET_IN_H=1;HAVE_PTHREAD_H=1;HAVE_SYS_SOCKET_H=1;MHD_USE_POSIX_THREADS=1;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-w -fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/microhttpd/src/include ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-w ")


#//:dm
set("target" "dm")
list(APPEND "${target}__cxx_srcs"
        "/mywork/github/skia/dm/DM.cpp"
        "/mywork/github/skia/dm/DMGpuTestProcs.cpp"
        "/mywork/github/skia/dm/DMJsonWriter.cpp"
        "/mywork/github/skia/dm/DMSrcSink.cpp")
list(APPEND "${target}__obj_target_srcs"
        "$<TARGET_OBJECTS:third_party__expat>"
        "$<TARGET_OBJECTS:modules__skottie>"
        "$<TARGET_OBJECTS:gpu_tool_utils>"
        "$<TARGET_OBJECTS:flags>"
        "$<TARGET_OBJECTS:third_party__zlib>"
        "$<TARGET_OBJECTS:gm>"
        "$<TARGET_OBJECTS:third_party__libpng>"
        "$<TARGET_OBJECTS:third_party__zlib_zlib_x86>"
        "$<TARGET_OBJECTS:common_flags>"
        "$<TARGET_OBJECTS:modules__sksg>"
        "$<TARGET_OBJECTS:third_party__Nima-Cpp>"
        "$<TARGET_OBJECTS:xml>"
        "$<TARGET_OBJECTS:third_party__jsoncpp>"
        "$<TARGET_OBJECTS:modules__skottie_tests>"
        "$<TARGET_OBJECTS:tool_utils>"
        "$<TARGET_OBJECTS:experimental_svg_model>"
        "$<TARGET_OBJECTS:tests>"
        "$<TARGET_OBJECTS:modules__sksg_tests>")
add_executable("${target}" ${${target}__cxx_srcs} ${${target}__obj_target_srcs})

set_target_properties("${target}" PROPERTIES COMPILE_DEFINITIONS "SK_GAMMA_APPLY_TO_A8;SK_ENABLE_DISCRETE_GPU;GR_TEST_UTILS=1;SK_ENABLE_SPIRV_VALIDATION;SK_HAS_HEIF_LIBRARY;SK_HAS_JPEG_LIBRARY;SK_SUPPORT_PDF;SK_PDF_USE_SFNTLY;SK_HAS_PNG_LIBRARY;SK_CODEC_DECODES_RAW;SK_HAS_WEBP_LIBRARY;SK_XML;SK_SUPPORT_ATLAS_TEXT=1;SK_ENABLE_SKOTTIE;SK_HAS_SKSG;")
set_target_properties("${target}" PROPERTIES COMPILE_FLAGS "-fstrict-aliasing -fPIC -Werror -fvisibility=hidden -Wall -Wextra -Winit-self -Wpointer-arith -Wsign-compare -Wvla -Wno-deprecated-declarations -Wno-maybe-uninitialized -Weverything -Wno-unknown-warning-option -Wno-nonportable-include-path -Wno-nonportable-system-include-path -Wno-cast-align -Wno-cast-qual -Wno-conversion -Wno-disabled-macro-expansion -Wno-documentation -Wno-documentation-unknown-command -Wno-double-promotion -Wno-exit-time-destructors -Wno-float-equal -Wno-format-nonliteral -Wno-global-constructors -Wno-missing-prototypes -Wno-missing-variable-declarations -Wno-pedantic -Wno-reserved-id-macro -Wno-shadow -Wno-shift-sign-overflow -Wno-signed-enum-bitfield -Wno-switch-enum -Wno-undef -Wno-unreachable-code -Wno-unreachable-code-break -Wno-unreachable-code-return -Wno-unused-macros -Wno-unused-member-function -Wno-unused-template -Wno-zero-as-null-pointer-constant -Wno-bad-function-cast -Wno-covered-switch-default -Wno-deprecated -Wno-missing-noreturn -Wno-old-style-cast -Wno-padded -Wno-newline-eof -Wno-implicit-fallthrough -Wno-unused-parameter -g -isystem /mywork/github/skia/third_party/externals/jsoncpp/include -isystem /mywork/github/skia/third_party/libpng -isystem /mywork/github/skia/third_party/externals/libpng -isystem /mywork/github/skia/cmake/gen/third_party/Nima-Cpp/Nima-Cpp -isystem /mywork/github/skia/cmake/gen/third_party/Nima-Cpp/Nima-Math-Cpp -std=c++14 -fvisibility-inlines-hidden -fno-exceptions -fno-rtti -Wnon-virtual-dtor -Wno-noexcept-type -Wno-abstract-vbase-init -Wno-weak-vtables -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-undefined-func-template ")
set_target_properties("${target}" PROPERTIES LINK_FLAGS "-Wl,-rpath,@loader_path/. -Wl,-w ")
add_dependencies("${target}"
        "third_party__Nima-Cpp_copy-nima-cpp"
        "third_party__Nima-Cpp_copy-nima-math-cpp")
find_library("library__dl" "dl")
find_library("library__AppKit" "AppKit")
find_library("library__ApplicationServices" "ApplicationServices")
find_library("library__OpenGL" "OpenGL")
target_link_libraries("${target}"
        "skia"
        "${library__dl}"
        "${library__AppKit}"
        "${library__ApplicationServices}"
        "${library__OpenGL}")

include(cmake_third_party__dng_sdk.cmake)
include(cmake_helloworld.cmake)
include(cmake_example.cmake)


